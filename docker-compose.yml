services:
  db:
    image: postgres:14
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:5432
    healthcheck:
      test: ["CMD-SHELL", "psql -U ${DB_USER} -d ${DB_NAME} -c 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      #- DEBUG=True
      - DB_HOST=db
      #- REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env

  celery:
    build: .
    command: celery -A config worker -l info
    volumes:
      - .:/app
    environment:
      #- DEBUG=True
      - DB_HOST=db
      #- REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - web
    env_file:
      - .env

  celery-beat:
    build: .
    command: celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    environment:
      #- DEBUG=True
      - DB_HOST=db
      #- REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - web
    env_file:
      - .env

  flower:
    build: .
    command: celery -A config flower
    volumes:
      - .:/app
    ports:
      - "5555:5555"
    environment:
      #- DEBUG=True
      - DB_HOST=db
      #- REDIS_URL=redis://redis:6379/0
    depends_on:
      - celery
    env_file:
      - .env

volumes:
  postgres_data:
  redis_data:

